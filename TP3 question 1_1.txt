package question1;
import question1.PilePleineException;
import question1.PileVideException;

public class Pile {
    public final static int TAILLE_PAR_DEFAUT = 5;
    private object[] zone;
    private int ptr;
    public Pile(int taille) {
        if (taille < 0)
            taille = TAILLE_PAR_DEFAUT;
        this.zone = new object[taille];
        this.ptr = 0;
    }
    public Pile() {
        this(TAILLE_PAR_DEFAUT);
    }
    public void empiler(object i) throws PilePleineException {
        if (estPleine())
            throw new PilePleineException();
        this.zone[this.ptr] = i;
        this.ptr++;
    }
    public object depiler() throws PileVideException {
        if (estVide())
            throw new PileVideException();
        this.ptr--;
        return zone[ptr];
    }
    public boolean estVide() {
        return ptr == 0;
    }
    public boolean estPleine() {
        return ptr == zone.length;
    }
    public String toString() {
        StringBuffer sb = new StringBuffer("[");
        for (int i = ptr - 1; i >= 0; i--) {
            sb.append(Integer.toString(zone[i]));
            if (i > 0)
                sb.append(", ");
        }
        sb.append("]");
        return sb.toString();
    }
}
public void actionPerformed(ActionEvent ae) {
        if (ae.getActionCommand().equals("empiler")) {
            try {
               
                p.empiler(donnee.getText()); 
                contenu.setText(p.toString());
            } catch (PilePleineException e) {
                contenu.setText(p.toString() + " estPleine !");
            } catch (NumberFormatException nfe) {
                contenu.setText(p.toString() + " error : " + nfe.getMessage());
            }
        } else {
            try {
                
                sommet.setText(p.depiler().toString());
                contenu.setText(p.toString());
            } catch (PileVideException e) {
                contenu.setText(p.toString() + " estVide !");
            }
        }
    }